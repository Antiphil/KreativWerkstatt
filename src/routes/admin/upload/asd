<script lang="ts">
	import { enhance } from '$app/forms';
	// @ts-nocheck
	/* let files_array = [];
	let file_input;
	let images = [];
	let index;
 */
	/* const handleUpload = () => {
		files_array = [...files_array, ...file_input.files];
		Promise.all(files_array.map(readImages)).then((values) => {
			images = values;
		});
	};
	const readImages = (file) => {
		return new Promise((resolve, reject) => {
			let fr = new FileReader();
			fr.onload = () => {
				resolve(fr.result);
			};
			fr.onerror = () => {
				reject(fr);
			};
			fr.readAsDataURL(file);
		});
	};
	const removeImage = (i) => {
		index = i;
		files_array.splice(index, 1);
		images.splice(index, 1);
		files_array = files_array;
		images = images;
	}; */

	let preview: string[] = [];
	let files: FileList | null = null;
	let loading = false;

	const getBase64 = (file: File): Promise<string | ArrayBuffer | null> => {
		return new Promise((resolve, reject) => {
			const reader = new FileReader();
			reader.readAsDataURL(file);
			reader.onload = () => resolve(reader.result);
			reader.onerror = (error) => reject(error);
		});
	};

	const handleFiles = async (event: Event) => {
		loading = true;
		const input = event.target as HTMLInputElement;
		files = input.files;
		if (files) {
			const filesArray = Array.from(files);
			preview = await Promise.all(filesArray.map((file) => getBase64(file)));
		}
		loading = false;
	};

	const upload = async (arr:any) => {
		const data = {}
		const imgData = arr
		await fetch(`/admin/upload/upload`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Accept: 'application/json'
            },
            body: JSON.stringify(data)
        });
	}
</script>

<div class="mt-10">
	<form action="?/upload" on:submit|preventDefault method="POST" enctype="multipart/form-data">
		<div class="flex items-center justify-center">
			<div class="mx-auto w-full max-w-3xl">
				<p class=" block text-xl font-semibold text-[#07074D]">Bild Informationen</p>
				<p class="mb-5 block text-sm font-medium text-[#6B7280]">Bitte bedenke das du hier nur ein einzelnes Produkt vorstellst. Gib also immer nur verschiedene Bilder vom selben Produkt an!</p>
				<div class="mb-5">
					<label for="title" class="block text-base font-medium text-[#07074D]"> Titel des Produkts </label>
					<label for="title" class="mb-3 block text-sm font-medium text-[#6B7280]"> Gib den Produkt einen pasenden Namen </label>
					<input type="text" name="title" id="title" value="test" placeholder="Beispiel: Tonkugel mit Blumenmuster" class="w-full rounded-md border border-[#cecece] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
				</div>
				<div class="mb-5">
					<label for="artist" class="block text-base font-medium text-[#07074D]"> Name der beteiligten Beschäftigten </label>
					<label for="artist" class="mb-3 block text-sm font-medium text-[#6B7280]"> Bitte gib an, wer am Produkt mitgearbeitet hat </label>
					<input type="text" name="artist" id="artist" value="test" placeholder="Beispiel: Richard Brettschneider, Sebastian Zapf" class="w-full rounded-md border border-[#cecece] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
				</div>
				<div class="mb-6 pt-4">
					<p class=" block text-xl font-semibold text-[#07074D]">Bilder Hochladen</p>
					<label for="file" class="mb-5 block text-sm font-medium text-[#6B7280]"> Wähle bis zu 4 Bilder des Produktes das du hochladen möchtest </label>

					<div class="mb-8">
						<input type="file" name="file" id="file" multiple accept=".png, .jpg, .jpeg" style="display: none" bind:files on:change={handleFiles} />
						<label for="file" class="relative flex min-h-[200px] items-center justify-center rounded-md border-2 border-dashed border-[#cecece] p-12 text-center">
							<div>
								<span class="inline-flex rounded border border-[#cecece] py-2 px-7 text-base font-medium text-[#07074D] hover:bg-[#6A64F1] cursor-pointer hover:text-white transition-all"> Bilder Auswählen </span>
								<div class="flex flex-col gap-3 justify-center">
									{#await Promise.resolve(loading) then}
										{#if loading}
											<p>Loading...</p>
										{/if}
										{#if !loading && preview.length > 0}
											<div class="flex justify-center mt-5 gap-3 [&>div]:first:border-4 first:[&>div]:border-red-500">
												{#each preview as image}
													<div class="w-24 h-24 border rounded-lg relative">
														<img src={image} alt="Preview" class="w-full h-full object-cover rounded-lg" />
														<button type="button" class="text-red-400 fa-solid fa-trash absolute top-1 right-1"></button>
													</div>
												{/each}
											</div>
											<span class="">Das erste Bild mit dem roten Rahmen dient als Vorschaubild für das ganze Produkt</span>
										{/if}
									{/await}

									<!-- {#if files_array && files_array[0]}
										<div class="flex justify-center mt-5 gap-3 [&>div]:first:border-4 first:[&>div]:border-red-500">
											{#each files_array as file, i}
												<div class="w-24 h-24 border rounded-lg relative">
													<img class="w-full h-full object-cover rounded-lg" src={images[i]} alt="preview" />
													<button type="button" class="text-red-400 fa-solid fa-trash absolute top-1 right-1" on:click={() => removeImage(i)}></button>
												</div>
											{/each}
										</div>
										
									{/if} -->
								</div>
							</div>
						</label>
					</div>
				</div>

				<div>
					<button class="hover:shadow-form w-full rounded-md bg-[#6A64F1] py-3 px-8 text-center text-base font-semibold text-white outline-none"> Hochladen </button>
				</div>
			</div>
		</div>
	</form>
</div>
